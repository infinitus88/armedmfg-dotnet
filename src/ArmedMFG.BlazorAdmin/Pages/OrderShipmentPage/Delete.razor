@inject ILogger<Delete> Logger
@inject IJSRuntime JSRuntime
@inject IOrderShipmentService OrderShipmentService

@inherits ArmedMFG.BlazorAdmin.Helpers.BlazorComponent

@namespace ArmedMFG.BlazorAdmin.Pages.OrderShipmentPage

<div class="modal @_modalClass" tabindex="-1" role="dialog" style="display:@_modalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Удалить Запись Отправки</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (_orderShipment == null)
                {
                    <Spinner></Spinner>
                }
                else
                {
                    <div class="container">
                        <div class="row">
                            <dl class="col-md-12 dl-horizontal">
                                <dt>
                                    Дата Отправки
                                </dt>

                                <dd>
                                    @_orderShipment.ShipmentDate
                                </dd>
                                
                                <dt>
                                    Имя Водителя
                                </dt>
                                
                                <dd>
                                    @_orderShipment.DriverName
                                </dd>
                                
                                <dt>
                                    Телефон Водителя
                                </dt>
                                
                                <dd>
                                    @_orderShipment.DriverPhone
                                </dd>
                                
                                <dt>
                                    Номер Машины
                                </dt>
                                
                                <dd>
                                    @_orderShipment.CarNumber
                                </dd>
                               
                            </dl>
                        </div>
                        <table class="table table-striped table-hover">
                            <thead>
                            <tr>
                                <th>Название Товара</th>
                                <th>Количество</th>
                            </tr>
                            </thead>
                            <tbody class="cursor-pointer">
                            @foreach (var orderProduct in _orderShipment.ShipmentProducts)
                            {   
                                <tr>
                                    <td>@ProductTypes.First(t => t.Id == orderProduct.ProductTypeId).Name</td>
                                    <td>@orderProduct.Quantity</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Отмена</button>
                <button class="btn btn-danger" @onclick="() => DeleteClick(_orderShipment.Id)">
                    Удалить
                </button>
            </div>
        </div>
    </div>
</div>

@if (_showDeleteModal)
{
    <div class="modal-backdrop fade show"></div>
}


@code {

    [Parameter]
    public IEnumerable<ProductType> ProductTypes { get; set; }

    [Parameter]
    public EventCallback<string> OnSaveClick { get; set; }

    private string _modalDisplay = "none;";
    private string _modalClass = "";
    private bool _showDeleteModal = false;
    private OrderShipment _orderShipment = new OrderShipment();

    private async Task DeleteClick(int id)
    {
        // TODO: Add some kind of "are you sure" check before this

        await OrderShipmentService.Delete(id);

        await OnSaveClick.InvokeAsync(null);
        await Close();
    }

    public async Task Open(int id)
    {
        Logger.LogInformation("Now loading... /OrderShipments/Delete/{Id}", id);

        await new Css(JSRuntime).HideBodyOverflow();

        _orderShipment = await OrderShipmentService.GetById(id);

        _modalDisplay = "block;";
        _modalClass = "Show";
        _showDeleteModal = true;

        StateHasChanged();
    }

    private async Task Close()
    {
        await new Css(JSRuntime).ShowBodyOverflow();
        _modalDisplay = "none";
        _modalClass = "";
        _showDeleteModal = false;
    }
}
