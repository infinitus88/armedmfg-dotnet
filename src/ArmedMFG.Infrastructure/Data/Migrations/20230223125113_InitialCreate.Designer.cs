// <auto-generated />
using System;
using ArmedMFG.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArmedMFG.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20230223125113_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("catalog_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_type_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("customer_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("customer_organization_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("department_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("material_category_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("material_supply_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("material_type_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("order_product_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("product_batch_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("product_category_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("product_price_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("product_type_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CatalogBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogBrand");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_hilo");

                    b.Property<int>("CatalogBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CatalogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogBrandId");

                    b.HasIndex("CatalogTypeId");

                    b.ToTable("Catalog", (string)null);
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CatalogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_type_hilo");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CatalogType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CustomerOrganizationAggregate.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "customer_hilo");

                    b.Property<int?>("CustomerOrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FindOutThrough")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrganizationId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CustomerOrganizationAggregate.CustomerOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "customer_organization_hilo");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxpayerIdNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerOrganizations");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "department_hilo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("MaterialCategories");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialSupply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "material_supply_hilo");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("MaterialSupplies");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "material_type_hilo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialCategoryId");

                    b.ToTable("MaterialTypes");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("PaymentType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "order_product_hilo");

                    b.Property<bool>("HaveSingleTimePrice")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SingleTimePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.OrderShipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderShipments");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.ShipmentProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderShipmentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderShipmentId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ShipmentProduct");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductBatch.ProducedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductBatchId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBatchId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProducedProducts");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductBatch.ProductBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "product_batch_hilo");

                    b.Property<DateTime>("ProducedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductBatches");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductBatch.SpentMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductBatchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("ProductBatchId");

                    b.ToTable("SpentMaterials");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "product_price_hilo");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "product_type_hilo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.WarehouseAggregate.WarehouseMaterialCheckPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("WarehouseMaterialCheckPoints");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.WarehouseAggregate.WarehouseProductCheckPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("WarehouseProductCheckPoints");
                });

            modelBuilder.Entity("ArmedMFG.BlazorShared.Models.MaterialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "material_category_hilo");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MaterialCategory");
                });

            modelBuilder.Entity("ArmedMFG.BlazorShared.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "product_category_hilo");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("ArmedMFG.BlazorShared.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CatalogItem", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.CatalogBrand", "CatalogBrand")
                        .WithMany()
                        .HasForeignKey("CatalogBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmedMFG.ApplicationCore.Entities.CatalogType", "CatalogType")
                        .WithMany()
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogBrand");

                    b.Navigation("CatalogType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CustomerOrganizationAggregate.Customer", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.CustomerOrganizationAggregate.CustomerOrganization", "CustomerOrganization")
                        .WithMany()
                        .HasForeignKey("CustomerOrganizationId");

                    b.Navigation("CustomerOrganization");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.CustomerOrganizationAggregate.CustomerOrganization", b =>
                {
                    b.OwnsOne("ArmedMFG.ApplicationCore.Entities.Address", "MainBranchAddress", b1 =>
                        {
                            b1.Property<int>("CustomerOrganizationId")
                                .HasColumnType("int");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasMaxLength(90)
                                .HasColumnType("nvarchar(90)");

                            b1.Property<string>("Region")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(180)
                                .HasColumnType("nvarchar(180)");

                            b1.HasKey("CustomerOrganizationId");

                            b1.ToTable("CustomerOrganizations");

                            b1.WithOwner()
                                .HasForeignKey("CustomerOrganizationId");
                        });

                    b.Navigation("MainBranchAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialCategory", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialSupply", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialType", "MaterialType")
                        .WithMany("MaterialSupplies")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialType", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialCategory", "MaterialCategory")
                        .WithMany()
                        .HasForeignKey("MaterialCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialCategory");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.Order", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.CustomerOrganizationAggregate.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.OrderProduct", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.OrderAggregate.Order", null)
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId");

                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.OrderShipment", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.OrderAggregate.Order", "Order")
                        .WithMany("OrderShipments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.ShipmentProduct", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.OrderAggregate.OrderShipment", "OrderShipment")
                        .WithMany("ShipmentProducts")
                        .HasForeignKey("OrderShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderShipment");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductBatch.ProducedProduct", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductBatch.ProductBatch", "ProductBatch")
                        .WithMany("ProducedProducts")
                        .HasForeignKey("ProductBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmedMFG.BlazorShared.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBatch");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductBatch.SpentMaterial", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductBatch.ProductBatch", "ProductBatch")
                        .WithMany("SpentMaterials")
                        .HasForeignKey("ProductBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");

                    b.Navigation("ProductBatch");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductCategory", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductPrice", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", "ProductType")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.WarehouseAggregate.WarehouseMaterialCheckPoint", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.WarehouseAggregate.WarehouseProductCheckPoint", b =>
                {
                    b.HasOne("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.MaterialTypeAggregate.MaterialType", b =>
                {
                    b.Navigation("MaterialSupplies");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderProducts");

                    b.Navigation("OrderShipments");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.OrderAggregate.OrderShipment", b =>
                {
                    b.Navigation("ShipmentProducts");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductBatch.ProductBatch", b =>
                {
                    b.Navigation("ProducedProducts");

                    b.Navigation("SpentMaterials");
                });

            modelBuilder.Entity("ArmedMFG.ApplicationCore.Entities.ProductTypeAggregate.ProductType", b =>
                {
                    b.Navigation("ProductPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
